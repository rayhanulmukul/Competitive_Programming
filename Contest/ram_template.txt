{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"tesla_C++": {
		"prefix": "ram",
		"body": [
		  "/*بِسْمِ اللَّهِ الرَّحْمَنِ الرَّحِيمِ*/",
		  "#include \"ext/pb_ds/assoc_container.hpp\"",
		  "#include \"ext/pb_ds/tree_policy.hpp\"",
		  "#include <bits/stdc++.h>",
		  "using namespace std;",
		  "using namespace __gnu_pbds;",
		  "",
		  "#define ll long long int",
		  "#define int ll",
		  "#define ld long double",
		  "#define pb push_back",
		  "#define ft front()",
		  "#define bk back()",
		  "#define pi 2*acos(0.0)",
		  "#define gap ' '",
		  "#define en '\\n'",
		  "#define endl en",
		  "#define mem(a, b) memset(a, b, sizeof(a))",
		  "#ifdef TESLA",
		  "#include \"main.hpp\"",
		  "#else",
		  "#define dbg(...)",
		  "#endif",
		  "mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());",
		  "#define rng(x,y) uniform_int_distribution<int>(x,y)(rng)",
		  "#define F0R(i,a,b) for (int i = (a); i < (b); ++i)",
		  "#define FOR(i,a) F0R(i,0,a)",
		  "const int MOD = 1e9+7; // 998244353;",
		  "const int MAX = 2e5+5;",
		  "const int N = 1005;",
		  "const int INF = 1e18;",
		  "int dx[] = {0, 0, +1, -1, -1, +1, -1, +1};",
		  "int dy[] = {+1, -1, 0, 0, +1, +1, -1, -1};",
		  "",
		  "void solve(int tt){",
		  "    ",
		  "}",
		  "int32_t main(){",
		  "#ifndef DEBUG",
		  "    ios_base::sync_with_stdio(false);",
		  "    cin.tie(NULL);",
		  "#endif",
		  "    int t = 1;",
		  "    cin >> t;",
		  "    for(int i = 1; i <= t; i++){",
		  "        solve(i);",
		  "    }",
		  "    return 0;",
		  "}"
		],
		"description": "Tesla's C++ Template"
	  }
}
